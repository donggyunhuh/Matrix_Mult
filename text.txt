N1, N2, N3, N4이 네 행렬이 있고, N1은 3*5, N2는 5*1, N3는 1*4, N4는 4*2라고 하자.
행렬의 곱셈에서도 결합법칙은 성립하는데, (N1*N2)*(N3*N4), N1*(N2*N3)*N4 등 가능합니다.
근데 이 식들을 계산하면 순서에 따라 횟수가 다르게 나오는데 여기서 최솟값을 구하려 하는 것입니다.
점화식 dp[i][j] = min(dp[i][j], dp[i][k]+dp[k+1][j]+d[i-1]*d[k]*d[j]) 입니다.
앞에 말한 행렬들 N1, N2, N3, N4가 있다고 합시다.
dp[i][j]는 i번째 행렬부터 j번째 행렬까지 연산하는데 필요한 최소 연산 횟수이다. k는 괄호를 나누는 기준점입니다.
예를 들어 N1, N2, N3가 있을때 k가 2라면 (N1*N2)*N3가 됩니다.
그리고 행렬들은 행렬곱이 가능하므로 붙어있는 행렬의 열크기와 행크기는 같고, 이를 붙여 나열하면 3, 5, 1, 4, 2가 됩니다.
d는 이런 방식으로 행렬의 크기를 나열한 배열입니다.

따라서, dp[i][k]+dp[k+1][j]+d[i-1]*d[k]*d[j]에서, dp[i][k]는 Ni에서 Nk까지 행렬곱 했을 때의 연산 횟수,
dp[k+1][j]는 N(k+1)에서 Nj까지 행렬곱 했을 때의 연산 횟수,
d[i-1]*d[k]*d[j]는 dp[i][k]와 dp[k+1][j]를 행렬곱 했을때의 연산 횟수이고,
이를 합친 값이 최소가 되도록 만드는 기준점 k를 찾는 것이라고 볼 수 있겠습니다.